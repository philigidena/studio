// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Recommends the most appropriate Nanchang service based on user input.
 *
 * - recommendService - A function that handles the service recommendation process.
 * - RecommendServiceInput - The input type for the recommendService function.
 * - RecommendServiceOutput - The return type for the recommendService function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendServiceInputSchema = z.object({
  needsDescription: z
    .string()
    .describe('A description of the user\'s aluminum needs.'),
});
export type RecommendServiceInput = z.infer<typeof RecommendServiceInputSchema>;

const RecommendServiceOutputSchema = z.object({
  recommendedService: z.string().describe('The most appropriate Nanchang service for the user.'),
  reasoning: z.string().describe('The reasoning behind the service recommendation.'),
});
export type RecommendServiceOutput = z.infer<typeof RecommendServiceOutputSchema>;

export async function recommendService(input: RecommendServiceInput): Promise<RecommendServiceOutput> {
  return recommendServiceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendServicePrompt',
  input: {schema: RecommendServiceInputSchema},
  output: {schema: RecommendServiceOutputSchema},
  prompt: `You are an AI assistant helping users find the most appropriate aluminum service provided by Nanchang.

  Given the following description of the user's needs, recommend the most suitable service and explain your reasoning.

  User Needs: {{{needsDescription}}}
  `,
});

const recommendServiceFlow = ai.defineFlow(
  {
    name: 'recommendServiceFlow',
    inputSchema: RecommendServiceInputSchema,
    outputSchema: RecommendServiceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
